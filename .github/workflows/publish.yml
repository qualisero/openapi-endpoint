---
name: Publish to npm

'on':
  push:
    branches:
      - main
    paths:
      - 'package.json'
  workflow_run:
    workflows: ['CI']
    types:
      - completed
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          # Fetch current and previous commit to compare versions
          fetch-depth: 2

      - name: Check if version changed
        id: version-check
        run: |
          # Get current version from package.json
          if ! CURRENT_VERSION=$(node -p "require('./package.json').version" \
            2>/dev/null); then
            echo "Error: Could not read current version from package.json"
            exit 1
          fi
          echo "Current version: $CURRENT_VERSION"

          # Get previous version from package.json in the previous commit
          if ! PREVIOUS_VERSION=$(git show HEAD~1:package.json 2>/dev/null | \
            node -p \
              "JSON.parse(require('fs').readFileSync(0, 'utf8')).version" \
            2>/dev/null); then
            echo "Warning: Could not read previous version, assuming changed"
            echo "should-publish=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "Previous version: $PREVIOUS_VERSION"

          # Compare versions
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "should-publish=true" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged ($CURRENT_VERSION)"
            echo "should-publish=false" >> $GITHUB_OUTPUT
          fi

      - uses: actions/setup-node@v4
        if: steps.version-check.outputs.should-publish == 'true'
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - run: npm ci
        if: steps.version-check.outputs.should-publish == 'true'

      - run: npm run build
        if: steps.version-check.outputs.should-publish == 'true'

      - run: npm publish --provenance --access public
        if: steps.version-check.outputs.should-publish == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
