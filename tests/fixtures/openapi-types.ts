/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/pets': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** List all pets */
    get: operations['listPets']
    put?: never
    /** Create a new pet */
    post: operations['createPet']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/pets/{petId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get a pet by ID */
    get: operations['getPet']
    /** Update a pet */
    put: operations['updatePet']
    post?: never
    /** Delete a pet */
    delete: operations['deletePet']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/users/{userId}/pets': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** List pets for a specific user */
    get: operations['listUserPets']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    Pet: {
      id: string
      name: string
      tag?: string
      /** @enum {string} */
      status?: 'available' | 'pending' | 'sold'
    }
    NewPet: {
      name: string
      tag?: string
      /** @enum {string} */
      status?: 'available' | 'pending' | 'sold'
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  listPets: {
    parameters: {
      query?: {
        limit?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description A list of pets */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Pet'][]
        }
      }
    }
  }
  createPet: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['NewPet']
      }
    }
    responses: {
      /** @description Pet created successfully */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Pet']
        }
      }
    }
  }
  getPet: {
    parameters: {
      query?: never
      header?: never
      path: {
        petId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Pet details */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Pet']
        }
      }
    }
  }
  updatePet: {
    parameters: {
      query?: never
      header?: never
      path: {
        petId: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['NewPet']
      }
    }
    responses: {
      /** @description Pet updated successfully */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Pet']
        }
      }
    }
  }
  deletePet: {
    parameters: {
      query?: never
      header?: never
      path: {
        petId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Pet deleted successfully */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            message?: string
          }
        }
      }
    }
  }
  listUserPets: {
    parameters: {
      query?: never
      header?: never
      path: {
        userId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description A list of user pets */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Pet'][]
        }
      }
    }
  }
}
